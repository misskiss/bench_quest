[{"/Users/michellekiss/Projects/bench-quest/src/index.js":"1","/Users/michellekiss/Projects/bench-quest/src/App.js":"2","/Users/michellekiss/Projects/bench-quest/src/reportWebVitals.js":"3","/Users/michellekiss/Projects/bench-quest/src/components/Home.js":"4","/Users/michellekiss/Projects/bench-quest/src/components/Card.js":"5","/Users/michellekiss/Projects/bench-quest/src/components/index.js":"6"},{"size":547,"mtime":1612209294899,"results":"7","hashOfConfig":"8"},{"size":224,"mtime":1612375631724,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1612196730035,"results":"10","hashOfConfig":"8"},{"size":4323,"mtime":1612390539596,"results":"11","hashOfConfig":"8"},{"size":3059,"mtime":1612382186605,"results":"12","hashOfConfig":"8"},{"size":91,"mtime":1612371494759,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"d5uxe5",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/michellekiss/Projects/bench-quest/src/index.js",[],["28","29"],"/Users/michellekiss/Projects/bench-quest/src/App.js",[],"/Users/michellekiss/Projects/bench-quest/src/reportWebVitals.js",[],"/Users/michellekiss/Projects/bench-quest/src/components/Home.js",[],"/Users/michellekiss/Projects/bench-quest/src/components/Card.js",["30"],"import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    height: '350px',\n    width: '100%',\n    paddingTop: '56.25%', // 16:9\n    objectFit: 'cover',\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  cardBottom: {\n    display: 'flex',\n    flexGrow: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingBottom: '10px',\n    paddingRight: '15px',\n    paddingLeft: '15px',\n    opacity: '80%',\n    color: 'black',\n  },\n}))\n\nconst cards = [1]\n\nconst CharacterCard = ({ data, loading }) => {\n  const classes = useStyles()\n\n  const deadOrAlive = (char) => {\n    if (char.status === 'Alive') {\n      return 'green'\n    } else if (char.status === 'Deceased') {\n      return 'red'\n    }\n    return 'black'\n  }\n\n  if (loading) {\n    return <Typography>Loading...</Typography>\n  }\n\n  return (\n    <Container className={classes.cardGrid} maxWidth=\"md\">\n      {/* End hero unit */}\n      {cards.map((card) => (\n        <Grid container spacing={4}>\n          {data.map((character) => (\n            <Grid item key={character} xs={12} sm={6} md={4}>\n              {console.log(character.char_id)}\n              <Card className={classes.card}>\n                <CardMedia\n                  className={classes.cardMedia}\n                  image={character.img}\n                  title=\"Image title\"\n                />\n                <CardContent className={classes.cardContent}>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {character.name}\n                  </Typography>\n                  <Typography>{character.portrayed}</Typography>\n                </CardContent>\n                {/* <CardActions> */}\n                <div className={classes.cardBottom}>\n                  <Typography>\"{character.nickname}\"</Typography>\n                  {/* {character.status === 'Alive'\n                    ? setColor('primary')\n                    : setColor('secondary')} */}\n                  <Typography\n                    style={{\n                      color: deadOrAlive(character),\n                      fontWeight: 'bold',\n                      opacity: '75%',\n                    }}\n                  >\n                    {character.status}\n                  </Typography>\n                </div>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      ))}\n    </Container>\n  )\n}\n\nexport default CharacterCard\n","/Users/michellekiss/Projects/bench-quest/src/components/index.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":17,"nodeType":"37","messageId":"38","endLine":1,"endColumn":25},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]